// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: api/ekko.proto

package ekko

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

// EkkoClient is the client API for Ekko service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EkkoClient interface {
}

type ekkoClient struct {
	cc grpc.ClientConnInterface
}

func NewEkkoClient(cc grpc.ClientConnInterface) EkkoClient {
	return &ekkoClient{cc}
}

// EkkoServer is the server API for Ekko service.
// All implementations must embed UnimplementedEkkoServer
// for forward compatibility
type EkkoServer interface {
	mustEmbedUnimplementedEkkoServer()
}

// UnimplementedEkkoServer must be embedded to have forward compatible implementations.
type UnimplementedEkkoServer struct {
}

func (UnimplementedEkkoServer) mustEmbedUnimplementedEkkoServer() {}

// UnsafeEkkoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EkkoServer will
// result in compilation errors.
type UnsafeEkkoServer interface {
	mustEmbedUnimplementedEkkoServer()
}

func RegisterEkkoServer(s grpc.ServiceRegistrar, srv EkkoServer) {
	s.RegisterService(&Ekko_ServiceDesc, srv)
}

// Ekko_ServiceDesc is the grpc.ServiceDesc for Ekko service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Ekko_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ekko.Ekko",
	HandlerType: (*EkkoServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "api/ekko.proto",
}
