// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnswerSubmissionsColumns holds the columns for the "answer_submissions" table.
	AnswerSubmissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "answer", Type: field.TypeString, Size: 2147483647},
		{Name: "relevance", Type: field.TypeFloat64, Default: 0},
		{Name: "clarity_completeness", Type: field.TypeFloat64, Default: 0},
		{Name: "accuracy", Type: field.TypeFloat64, Default: 0},
		{Name: "overall", Type: field.TypeFloat64, Default: 0},
		{Name: "status", Type: field.TypeInt32},
		{Name: "question_id", Type: field.TypeUint64},
		{Name: "submission_attempt_id", Type: field.TypeUint64},
	}
	// AnswerSubmissionsTable holds the schema information for the "answer_submissions" table.
	AnswerSubmissionsTable = &schema.Table{
		Name:       "answer_submissions",
		Columns:    AnswerSubmissionsColumns,
		PrimaryKey: []*schema.Column{AnswerSubmissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "answer_submissions_questions_answers",
				Columns:    []*schema.Column{AnswerSubmissionsColumns[9]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "answer_submissions_submission_attempts_answers",
				Columns:    []*schema.Column{AnswerSubmissionsColumns[10]},
				RefColumns: []*schema.Column{SubmissionAttemptsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// QuestionsColumns holds the columns for the "questions" table.
	QuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "criteria", Type: field.TypeString, Size: 2147483647},
		{Name: "hint", Type: field.TypeString, Size: 2147483647},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "scenario_id", Type: field.TypeUint64},
	}
	// QuestionsTable holds the schema information for the "questions" table.
	QuestionsTable = &schema.Table{
		Name:       "questions",
		Columns:    QuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "questions_scenarios_questions",
				Columns:    []*schema.Column{QuestionsColumns[6]},
				RefColumns: []*schema.Column{ScenariosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ScenariosColumns holds the columns for the "scenarios" table.
	ScenariosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "bm_id", Type: field.TypeUint64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "rating", Type: field.TypeFloat64, Default: 0},
		{Name: "total_rating", Type: field.TypeInt32, Default: 0},
		{Name: "participants", Type: field.TypeInt32, Default: 0},
	}
	// ScenariosTable holds the schema information for the "scenarios" table.
	ScenariosTable = &schema.Table{
		Name:       "scenarios",
		Columns:    ScenariosColumns,
		PrimaryKey: []*schema.Column{ScenariosColumns[0]},
	}
	// ScenarioCandidatesColumns holds the columns for the "scenario_candidates" table.
	ScenarioCandidatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "candidate_id", Type: field.TypeUint64},
		{Name: "scenario_id", Type: field.TypeUint64},
	}
	// ScenarioCandidatesTable holds the schema information for the "scenario_candidates" table.
	ScenarioCandidatesTable = &schema.Table{
		Name:       "scenario_candidates",
		Columns:    ScenarioCandidatesColumns,
		PrimaryKey: []*schema.Column{ScenarioCandidatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "scenario_candidates_scenarios_candidates",
				Columns:    []*schema.Column{ScenarioCandidatesColumns[4]},
				RefColumns: []*schema.Column{ScenariosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ScenarioFavoritesColumns holds the columns for the "scenario_favorites" table.
	ScenarioFavoritesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "scenario_id", Type: field.TypeUint64},
	}
	// ScenarioFavoritesTable holds the schema information for the "scenario_favorites" table.
	ScenarioFavoritesTable = &schema.Table{
		Name:       "scenario_favorites",
		Columns:    ScenarioFavoritesColumns,
		PrimaryKey: []*schema.Column{ScenarioFavoritesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "scenario_favorites_scenarios_favorites",
				Columns:    []*schema.Column{ScenarioFavoritesColumns[4]},
				RefColumns: []*schema.Column{ScenariosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ScenarioFieldsColumns holds the columns for the "scenario_fields" table.
	ScenarioFieldsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
	}
	// ScenarioFieldsTable holds the schema information for the "scenario_fields" table.
	ScenarioFieldsTable = &schema.Table{
		Name:       "scenario_fields",
		Columns:    ScenarioFieldsColumns,
		PrimaryKey: []*schema.Column{ScenarioFieldsColumns[0]},
	}
	// SubmissionAttemptsColumns holds the columns for the "submission_attempts" table.
	SubmissionAttemptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "attempt_number", Type: field.TypeInt32},
		{Name: "scenario_candidate_id", Type: field.TypeUint64},
	}
	// SubmissionAttemptsTable holds the schema information for the "submission_attempts" table.
	SubmissionAttemptsTable = &schema.Table{
		Name:       "submission_attempts",
		Columns:    SubmissionAttemptsColumns,
		PrimaryKey: []*schema.Column{SubmissionAttemptsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "submission_attempts_scenario_candidates_attempts",
				Columns:    []*schema.Column{SubmissionAttemptsColumns[4]},
				RefColumns: []*schema.Column{ScenarioCandidatesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "submissionattempt_scenario_candidate_id_attempt_number",
				Unique:  true,
				Columns: []*schema.Column{SubmissionAttemptsColumns[4], SubmissionAttemptsColumns[3]},
			},
		},
	}
	// ScenarioFieldSenariosColumns holds the columns for the "scenario_field_senarios" table.
	ScenarioFieldSenariosColumns = []*schema.Column{
		{Name: "scenario_field_id", Type: field.TypeUint64},
		{Name: "scenario_id", Type: field.TypeUint64},
	}
	// ScenarioFieldSenariosTable holds the schema information for the "scenario_field_senarios" table.
	ScenarioFieldSenariosTable = &schema.Table{
		Name:       "scenario_field_senarios",
		Columns:    ScenarioFieldSenariosColumns,
		PrimaryKey: []*schema.Column{ScenarioFieldSenariosColumns[0], ScenarioFieldSenariosColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "scenario_field_senarios_scenario_field_id",
				Columns:    []*schema.Column{ScenarioFieldSenariosColumns[0]},
				RefColumns: []*schema.Column{ScenarioFieldsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "scenario_field_senarios_scenario_id",
				Columns:    []*schema.Column{ScenarioFieldSenariosColumns[1]},
				RefColumns: []*schema.Column{ScenariosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnswerSubmissionsTable,
		QuestionsTable,
		ScenariosTable,
		ScenarioCandidatesTable,
		ScenarioFavoritesTable,
		ScenarioFieldsTable,
		SubmissionAttemptsTable,
		ScenarioFieldSenariosTable,
	}
)

func init() {
	AnswerSubmissionsTable.ForeignKeys[0].RefTable = QuestionsTable
	AnswerSubmissionsTable.ForeignKeys[1].RefTable = SubmissionAttemptsTable
	QuestionsTable.ForeignKeys[0].RefTable = ScenariosTable
	ScenarioCandidatesTable.ForeignKeys[0].RefTable = ScenariosTable
	ScenarioFavoritesTable.ForeignKeys[0].RefTable = ScenariosTable
	SubmissionAttemptsTable.ForeignKeys[0].RefTable = ScenarioCandidatesTable
	ScenarioFieldSenariosTable.ForeignKeys[0].RefTable = ScenarioFieldsTable
	ScenarioFieldSenariosTable.ForeignKeys[1].RefTable = ScenariosTable
}
