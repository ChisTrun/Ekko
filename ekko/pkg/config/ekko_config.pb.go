// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.1
// source: Ekko/api/ekko_config.proto

package ekko

import (
	api "ekko/pkg/carbon/api"
	api2 "ekko/pkg/database/api"
	api1 "ekko/pkg/logger/api"
	api3 "ekko/pkg/redis/api"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener     *api.Listener  `protobuf:"bytes,1,opt,name=listener,proto3" json:"listener,omitempty"`
	Logger       *api1.Logger   `protobuf:"bytes,2,opt,name=logger,proto3" json:"logger,omitempty"`
	Database     *api2.Database `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	Redis        *api3.Redis    `protobuf:"bytes,4,opt,name=redis,proto3" json:"redis,omitempty"`
	HttpListener *api.Listener  `protobuf:"bytes,8,opt,name=http_listener,json=httpListener,proto3" json:"http_listener,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Ekko_api_ekko_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_Ekko_api_ekko_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_Ekko_api_ekko_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetListener() *api.Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *Config) GetLogger() *api1.Logger {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *Config) GetDatabase() *api2.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Config) GetRedis() *api3.Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Config) GetHttpListener() *api.Listener {
	if x != nil {
		return x.HttpListener
	}
	return nil
}

var File_Ekko_api_ekko_config_proto protoreflect.FileDescriptor

var file_Ekko_api_ekko_config_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x45, 0x6b, 0x6b, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6b, 0x6b, 0x6f, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x6b,
	0x6b, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x61, 0x72,
	0x62, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x41, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12,
	0x48, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x68, 0x74, 0x74,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x16, 0x5a, 0x14, 0x65, 0x6b, 0x6b,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3b, 0x65, 0x6b, 0x6b,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Ekko_api_ekko_config_proto_rawDescOnce sync.Once
	file_Ekko_api_ekko_config_proto_rawDescData = file_Ekko_api_ekko_config_proto_rawDesc
)

func file_Ekko_api_ekko_config_proto_rawDescGZIP() []byte {
	file_Ekko_api_ekko_config_proto_rawDescOnce.Do(func() {
		file_Ekko_api_ekko_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_Ekko_api_ekko_config_proto_rawDescData)
	})
	return file_Ekko_api_ekko_config_proto_rawDescData
}

var file_Ekko_api_ekko_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_Ekko_api_ekko_config_proto_goTypes = []interface{}{
	(*Config)(nil),        // 0: ekko.config.Config
	(*api.Listener)(nil),  // 1: greyhole.carbon.Listener
	(*api1.Logger)(nil),   // 2: greyhole.logger.Logger
	(*api2.Database)(nil), // 3: greyhole.database.Database
	(*api3.Redis)(nil),    // 4: greyhole.redis.Redis
}
var file_Ekko_api_ekko_config_proto_depIdxs = []int32{
	1, // 0: ekko.config.Config.listener:type_name -> greyhole.carbon.Listener
	2, // 1: ekko.config.Config.logger:type_name -> greyhole.logger.Logger
	3, // 2: ekko.config.Config.database:type_name -> greyhole.database.Database
	4, // 3: ekko.config.Config.redis:type_name -> greyhole.redis.Redis
	1, // 4: ekko.config.Config.http_listener:type_name -> greyhole.carbon.Listener
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_Ekko_api_ekko_config_proto_init() }
func file_Ekko_api_ekko_config_proto_init() {
	if File_Ekko_api_ekko_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Ekko_api_ekko_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Ekko_api_ekko_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Ekko_api_ekko_config_proto_goTypes,
		DependencyIndexes: file_Ekko_api_ekko_config_proto_depIdxs,
		MessageInfos:      file_Ekko_api_ekko_config_proto_msgTypes,
	}.Build()
	File_Ekko_api_ekko_config_proto = out.File
	file_Ekko_api_ekko_config_proto_rawDesc = nil
	file_Ekko_api_ekko_config_proto_goTypes = nil
	file_Ekko_api_ekko_config_proto_depIdxs = nil
}
